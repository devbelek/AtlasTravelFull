"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/[locale]/about-us/page",{

/***/ "(app-pages-browser)/./src/services/about-us.ts":
/*!**********************************!*\
  !*** ./src/services/about-us.ts ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   axiosGetAboutUs: function() { return /* binding */ axiosGetAboutUs; },\n/* harmony export */   axiosGetAboutUsImages: function() { return /* binding */ axiosGetAboutUsImages; },\n/* harmony export */   axiosGetFaqs: function() { return /* binding */ axiosGetFaqs; },\n/* harmony export */   axiosGetOurProjects: function() { return /* binding */ axiosGetOurProjects; }\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/lib/axios.js\");\n/* harmony import */ var _constants_default_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/constants/default_api */ \"(app-pages-browser)/./src/constants/default_api.ts\");\n/* harmony import */ var _cities__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cities */ \"(app-pages-browser)/./src/services/cities.ts\");\n\n\n\nconst axiosGetAboutUs = async ()=>{\n    try {\n        const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get(\"\".concat(_constants_default_api__WEBPACK_IMPORTED_MODULE_0__.API_BASE_URL, \"about-us/\"));\n        const data = response.data;\n        return data;\n    } catch (error) {\n        console.error(\"Ошибка при загрузке about-us:\", error);\n        return [];\n    }\n};\nconst axiosGetAboutUsImages = async ()=>{\n    try {\n        const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get(\"\".concat(_constants_default_api__WEBPACK_IMPORTED_MODULE_0__.API_BASE_URL, \"about-us-images/\"));\n        const data = response.data;\n        return data;\n    } catch (error) {\n        console.error(\"Ошибка при загрузке about-us-images:\", error);\n        return [];\n    }\n};\n// export const axiosGetOurProjects = async () => {\n//   try {\n//     const response = await axios.get(`${API_BASE_URL}our-projects/`);\n//     const data = response.data;\n//     const projects = [];\n//     if (data.tours && Array.isArray(data.tours)) {\n//       const cityIds = data.tours.map((tour: any) => tour.to_city);\n//       const citiesData = await Promise.all(\n//         cityIds.map(async (id: string) => await axiosGetCity(id))\n//       );\n//       const toursWithLink = data.tours.map((tour: any, index: number) => ({\n//         ...tour,\n//         linkTo: \"tours\",\n//         cityInfo: citiesData[index],\n//       }));\n//       projects.push(...toursWithLink);\n//     }\n//     if (data.flights && Array.isArray(data.flights)) {\n//       const flightsWithLink = await Promise.all(\n//         data.flights.map(async (flight: any) => {\n//           const cityData = await axiosGetCity(flight.to_city);\n//           return {\n//             ...flight,\n//             linkTo: \"flights\",\n//             cityInfo: cityData,\n//           };\n//         })\n//       );\n//       projects.push(...flightsWithLink);\n//     }\n//     if (data.hotels && Array.isArray(data.hotels)) {\n//       const hotelsWithLink = await Promise.all(\n//         data.hotels.map(async (hotel: any) => {\n//           const cityData = await axiosGetCity(hotel.city);\n//           return {\n//             ...hotel,\n//             linkTo: \"hotels\",\n//             cityInfo: cityData,\n//           };\n//         })\n//       );\n//       projects.push(...hotelsWithLink);\n//     }\n//     if (data.transfers && Array.isArray(data.transfers)) {\n//       const transfersWithLink = await Promise.all(\n//         data.transfers.map(async (transfer: any) => {\n//           const cityData = await axiosGetCity(transfer.city);\n//           return {\n//             ...transfer,\n//             linkTo: \"car-rental\",\n//             cityInfo: cityData,\n//           };\n//         })\n//       );\n//       projects.push(...transfersWithLink);\n//     }\n//     return { ...data, projects };\n//   } catch (error) {\n//     console.error(\"Ошибка при загрузке home:\", error);\n//     return [];\n//   }\n// };\nconst axiosGetOurProjects = async ()=>{\n    try {\n        const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get(\"\".concat(_constants_default_api__WEBPACK_IMPORTED_MODULE_0__.API_BASE_URL, \"our-projects/\"));\n        const data = response.data;\n        const projects = []; // Массив, который будет содержать все проекты\n        // Обработка туров\n        if (data.tours && Array.isArray(data.tours)) {\n            const cityIds = data.tours.map((tour)=>tour.to_city);\n            const citiesData = await Promise.all(cityIds.map(async (id)=>await (0,_cities__WEBPACK_IMPORTED_MODULE_1__.axiosGetCity)(id)));\n            const toursWithLink = data.tours.map((tour, index)=>({\n                    ...tour,\n                    linkTo: \"tours\",\n                    cityInfo: citiesData[index]\n                }));\n            projects.push(...toursWithLink); // Добавляем в массив projects\n        }\n        // Обработка авиабилетов\n        if (data.flights && Array.isArray(data.flights)) {\n            const flightsWithLink = await Promise.all(data.flights.map(async (flight)=>{\n                const cityData = await (0,_cities__WEBPACK_IMPORTED_MODULE_1__.axiosGetCity)(flight.to_city);\n                return {\n                    ...flight,\n                    linkTo: \"flights\",\n                    cityInfo: cityData\n                };\n            }));\n            projects.push(...flightsWithLink); // Добавляем в массив projects\n        }\n        // Обработка отелей\n        if (data.hotels && Array.isArray(data.hotels)) {\n            const hotelsWithLink = await Promise.all(data.hotels.map(async (hotel)=>{\n                const cityData = await (0,_cities__WEBPACK_IMPORTED_MODULE_1__.axiosGetCity)(hotel.city);\n                return {\n                    ...hotel,\n                    linkTo: \"hotels\",\n                    cityInfo: cityData\n                };\n            }));\n            projects.push(...hotelsWithLink); // Добавляем в массив projects\n        }\n        // Обработка трансферов\n        if (data.transfers && Array.isArray(data.transfers)) {\n            const transfersWithLink = await Promise.all(data.transfers.map(async (transfer)=>{\n                const cityData = await (0,_cities__WEBPACK_IMPORTED_MODULE_1__.axiosGetCity)(transfer.city);\n                return {\n                    ...transfer,\n                    linkTo: \"car-rental\",\n                    cityInfo: cityData\n                };\n            }));\n            projects.push(...transfersWithLink); // Добавляем в массив projects\n        }\n        return {\n            ...data,\n            projects\n        }; // Возвращаем весь объект с добавленным массивом projects\n    } catch (error) {\n        console.error(\"Ошибка при загрузке данных:\", error);\n        return [];\n    }\n};\nconst axiosGetFaqs = async ()=>{\n    try {\n        const response = await axios__WEBPACK_IMPORTED_MODULE_2__[\"default\"].get(\"\".concat(_constants_default_api__WEBPACK_IMPORTED_MODULE_0__.API_BASE_URL, \"faqs/\"));\n        const data = response.data;\n        return data;\n    } catch (error) {\n        console.error(\"Ошибка при загрузке faqs:\", error);\n        return [];\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/about-us.ts\n"));

/***/ })

});